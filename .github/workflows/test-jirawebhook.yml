
name: artifact_deployed

on:
  # workflow_dispatch is mandatory, so that Artifactory can trigger
  # the workflow through GitHub REST API.
  workflow_dispatch: 
    # inputs are optional, they may be used to convey contextual data
    # from the JFrog event to the workflow.
    inputs:
      name: 
        required: true 
        type: string
      release_bundle: 
        required: true 
        type: string
      bundle_version:
        required: true 
        type: string
      environment:
        required: true 
        type: string
      url:
        required: true 
        type: string

permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing..
  packages: write # for uploading attestations.
  contents: read
          
jobs:
  build:
    env:
       JF_URL: https://${{ vars.JF_URL }}/
    runs-on: ubuntu-latest
    steps:
      # Use the specific setup-cli branch
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        env:
          JF_URL: https://${{ vars.JF_URL }}/
          JF_PROJECT: ${{ vars.JF_PROJECT }}
        with:
            oidc-provider-name: nareshgithub
            oidc-audience: ps-jfrog-oidc
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: test
        run: |
          MY_WORK_DIR=${{ github.workspace }}

      - name: Print name
        run: echo  The path is ${{ inputs.name }}

      - name: Print release_bundle
        run: echo  The path is ${{ inputs.release_bundle }}

      - name: Print all
        run: echo "The path is ${{ inputs.bundle_version }}"

      - name: Set up Environment Variables
        run: |
          echo "JFROG_URL=${{ inputs.url }}" >> $GITHUB_ENV
          echo "RELEASEBUNDLE_NAME=${{ inputs.release_bundle }}" >> $GITHUB_ENV
          echo "RELEASEBUNDLE_VERSION=${{ inputs.bundle_version }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_ENV



