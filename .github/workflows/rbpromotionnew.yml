
name: release_bundle_created

on:
  # workflow_dispatch is mandatory, so that Artifactory can trigger
  # the workflow through GitHub REST API.
  workflow_dispatch: 
    # inputs are optional, they may be used to convey contextual data
    # from the JFrog event to the workflow.
    inputs:
      name: 
        required: true 
        type: string
      release_bundle: 
        required: true 
        type: string
      bundle_version:
        required: true 
        type: string
      environment:
        required: true 
        type: string
      sourceurl:
        required: true 
        type: string
      targeturl:
        required: true 
        type: string

permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing..
  packages: write # for uploading attestations.
  contents: read
          
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print URL
        run: echo  The path is ${{ inputs.sourceurl }}  and target url is ${{ inputs.targeturl }} and ${{ inputs.environment }}

      - name: Get id token
        run: |
            ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=ps-jfrog-oidc" | jq .value | tr -d '"')
            echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
            echo "ID_TOKEN: $ID_TOKEN"
            
      - name: Exchange token with access
        env:
            ID_TOKEN: ${{env.ID_TOKEN}}
            JFROG_PLATFORM_URL: https://${{ inputs.sourceurl }}
        run: |
            ACCESS_TOKEN=$(curl -v -XPOST -H "Content-Type: application/json" "${{ env.JFROG_PLATFORM_URL }}/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"nareshgithub\"}" | jq .access_token | tr -d '"')
            echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

      # Use the specific setup-cli branch
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli-source
        env:
          JF_URL: ${{ inputs.targeturl }}/
          SETUP_JFROG_CLI_SERVER_IDS: target-server
        with:
            oidc-provider-name: naresh-dr
            oidc-audience: ps-jfrog-oidc

      


      - name: Run Release Bundle Promotion Script
        run: |
          chmod +x $GITHUB_WORKSPACE/promote_release_bundle.py
          python $GITHUB_WORKSPACE/promote_release_bundle.py
        env:
          ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }} # Access token for source JPD audit API
          SOURCE_URL: ${{ inputs.sourceurl }}
          TARGET_URL: ${{ inputs.targeturl }}
          RELEASE_BUNDLE: ${{ inputs.release_bundle }}
          BUNDLE_VERSION: ${{ inputs.bundle_version }}
          ENVIRONMENT: ${{ inputs.environment }}
